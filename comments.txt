Provider : track of store so we can access from anywhere in app

reducer : (state = [],action) =>{
  if(action.type === 'CREATE'){
    return stateChangedByTheAction
  }
}
prefer switch statements as multiple if statements for diff. action.type
in reducer state has to be equal to something depending upon state

prehock era there was crazy syntext to use redux 
useDispatch : helps to dispatch an action
it is an hock

proxy : allows the app to "pretend" it is making requests from the same port of the server

moment : has .fromNow() that says 5min ago...

SVG backgrounds:
https://www.svgbackgrounds.com/set/free-svg-backgrounds-and-patterns/

data managment without redux | props drilling
refactor with redux

{} : destructuring

Once folder structure is made :
redux[actions|reducers]                   client<-|||||->server                 models routes controllers 
new feature adding is very easy and your application becomes very scalable

RestAPI :
One of the key advantages of REST APIs is that they provide a great deal of flexibility. Data is not tied to resources or methods, so REST can handle multiple types of calls, return different data formats 

create const for actiontype as it is tricky find error when any typo with strings

live backend api using heroku